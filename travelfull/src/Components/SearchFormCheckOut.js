import React, { useState } from 'react';
import DatePicker from 'react-datepicker';
import 'react-datepicker/dist/react-datepicker.css';
import Modal from 'react-modal';

// Mock data cho form v√† booking
const mockData = {
  checkinDate: new Date(),  // D·ªØ li·ªáu ng√†y m·∫∑c ƒë·ªãnh
  checkoutDate: new Date(),
  guestInfo: {
    adults: 2,
    children: 0,
    pets: 1
  },
  bookingOptions: [
    {
      partner: 'Booking',
      price: '1.350.000 VNƒê',
      buttonText: 'ƒê·∫∑t'
    },
    {
      partner: 'Agoda',
      price: '1.320.000 VNƒê',
      buttonText: 'ƒê·∫∑t'
    },
    {
      partner: 'Expedia',
      price: '1.400.000 VNƒê',
      buttonText: 'ƒê·∫∑t'
    }
  ]
};

const BookingSection = () => {
  const [data, setData] = useState(mockData);  // S·ª≠ d·ª•ng state ƒë·ªÉ mock data
  const [isGuestModalOpen, setIsGuestModalOpen] = useState(false);  // Tr·∫°ng th√°i modal guest
  const [isCheckinOpen, setIsCheckinOpen] = useState(false);  // Ki·ªÉm so√°t tr·∫°ng th√°i hi·ªÉn th·ªã DatePicker cho check-in
  const [isCheckoutOpen, setIsCheckoutOpen] = useState(false); // Ki·ªÉm so√°t tr·∫°ng th√°i hi·ªÉn th·ªã DatePicker cho check-out
  const [guests, setGuests] = useState(data.guestInfo);  // Tr·∫°ng th√°i kh√°ch

  const handleGuestModal = () => {
    setIsGuestModalOpen(!isGuestModalOpen);
  };

  const handleDateChange = (date, type) => {
    // Ki·ªÉm tra khi thay ƒë·ªïi ng√†y check-in
    if (type === 'checkinDate') {
      setData({
        ...data,
        checkinDate: date,
        checkoutDate: date > data.checkoutDate ? date : data.checkoutDate  // N·∫øu ng√†y check-in l·ªõn h∆°n ng√†y check-out, ƒë·∫∑t l·∫°i check-out b·∫±ng check-in
      });
    }

    // Ki·ªÉm tra khi thay ƒë·ªïi ng√†y check-out
    if (type === 'checkoutDate') {
      if (date >= data.checkinDate) {
        setData({
          ...data,
          checkoutDate: date
        });
      } else {
        alert('Ng√†y Check-out ph·∫£i l·ªõn h∆°n ho·∫∑c b·∫±ng ng√†y Check-in!');
      }
    }
  };

  const handleGuestChange = (type, value) => {
    setGuests({
      ...guests,
      [type]: value
    });
  };

  const saveGuestInfo = () => {
    setData({
      ...data,
      guestInfo: guests
    });
    setIsGuestModalOpen(false);  // ƒê√≥ng modal
  };

  return (
    <div style={{ display: 'flex', justifyContent: 'space-between', gap: '20px', margin: '20px 0' }}>
      {/* Search form b√™n tr√°i */}
      <div style={{ flex: '1' }}>
        <div style={{ border: '1px solid #ccc', borderRadius: '8px', padding: '30px' }}>
          
          <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>
            {/* Check-in */}
            <div style={{ width: '48%', paddingRight: '10px', position: 'relative' }}>
              <label>Check-in</label>
              <input
                type="text"
                value={data.checkinDate.toLocaleDateString('vi-VN')}
                onClick={() => setIsCheckinOpen(true)}  // Hi·ªÉn th·ªã DatePicker khi ng∆∞·ªùi d√πng nh·∫•n v√†o input
                className="form-control"
                readOnly
              />
              {isCheckinOpen && (
                <DatePicker
                  selected={data.checkinDate}
                  onChange={(date) => handleDateChange(date, 'checkinDate')}
                  dateFormat="dd/MM/yyyy"
                  inline
                  onClickOutside={() => setIsCheckinOpen(false)}  // ƒê√≥ng DatePicker khi ng∆∞·ªùi d√πng click ra ngo√†i
                />
              )}
            </div>

            {/* Check-out */}
            <div style={{ width: '48%', paddingLeft: '10px', position: 'relative' }}>
              <label>Check-out</label>
              <input
                type="text"
                value={data.checkoutDate.toLocaleDateString('vi-VN')}
                onClick={() => setIsCheckoutOpen(true)}  // Hi·ªÉn th·ªã DatePicker khi ng∆∞·ªùi d√πng nh·∫•n v√†o input
                className="form-control"
                readOnly
              />
              {isCheckoutOpen && (
                <DatePicker
                  selected={data.checkoutDate}
                  onChange={(date) => handleDateChange(date, 'checkoutDate')}
                  dateFormat="dd/MM/yyyy"
                  inline
                  onClickOutside={() => setIsCheckoutOpen(false)}  // ƒê√≥ng DatePicker khi ng∆∞·ªùi d√πng click ra ngo√†i
                />
              )}
            </div>
          </div>

          {/* Guest Info */}
          <div style={{ marginBottom: '20px' }}>
            <label>Guest</label>
            <div
              onClick={handleGuestModal}
              style={{
                display: 'flex',
                alignItems: 'center',
                border: '1px solid #ddd',
                borderRadius: '5px',
                padding: '10px',
                marginTop: '10px',
                cursor: 'pointer'
              }}
            >
              <span role="img" aria-label="guest">üë§</span>{' '}
              {`${guests.adults} ng∆∞·ªùi l·ªõn, ${guests.children} tr·∫ª em, ${guests.pets} th√∫ c∆∞ng`}
            </div>
          </div>

          <p style={{ color: '#666', fontSize: '14px' }}>
            Gi√° l√† gi√° trung b√¨nh m·ªói ƒë√™m m√† c√°c ƒë·ªëi t√°c c·ªßa ch√∫ng t√¥i cung c·∫•p v√† c√≥ th·ªÉ kh√¥ng bao g·ªìm t·∫•t c·∫£ thu·∫ø v√† ph√≠. Thu·∫ø v√† ph√≠ ƒë∆∞·ª£c hi·ªÉn th·ªã ch·ªâ l√† ∆∞·ªõc t√≠nh. Vui l√≤ng xem c√°c ƒë·ªëi t√°c c·ªßa ch√∫ng t√¥i ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt.
          </p>
        </div>
      </div>

      {/* Booking info b√™n ph·∫£i */}
      <div style={{ flex: '0.5' }}>
        {data.bookingOptions.map((option, index) => (
          <div
            key={index}
            style={{
              border: '1px solid #2E3192',
              borderRadius: '8px',
              padding: '10px',
              marginBottom: '10px'
            }}
          >
            <div
              style={{
                display: 'flex',
                justifyContent: 'space-between',
                alignItems: 'center'
              }}
            >
              <div>
                <div
                  style={{
                    color: '#2E3192',
                    fontWeight: 'bold',
                    fontSize: '20px'
                  }}
                >
                  {option.partner}
                </div>
                <div>{option.price}</div>
              </div>
              <button
                style={{
                  padding: '10px',
                  backgroundColor: '#2E3192',
                  color: '#fff',
                  border: 'none',
                  borderRadius: '5px'
                }}
              >
                {option.buttonText}
              </button>
            </div>
          </div>
        ))}
      </div>

      {/* Modal cho ph·∫ßn ch·ªçn Guest */}
      <Modal
        isOpen={isGuestModalOpen}
        onRequestClose={handleGuestModal}
        contentLabel="Guest Modal"
      >
        <h2>Ch·ªçn s·ªë l∆∞·ª£ng kh√°ch</h2>
        <div style={{ marginBottom: '10px' }}>
          <label>Ng∆∞·ªùi l·ªõn:</label>
          <input
            type="number"
            value={guests.adults}
            onChange={(e) => handleGuestChange('adults', e.target.value)}
            min="1"
          />
        </div>
        <div style={{ marginBottom: '10px' }}>
          <label>Tr·∫ª em:</label>
          <input
            type="number"
            value={guests.children}
            onChange={(e) => handleGuestChange('children', e.target.value)}
            min="0"
          />
        </div>
        <div style={{ marginBottom: '10px' }}>
          <label>Th√∫ c∆∞ng:</label>
          <input
            type="number"
            value={guests.pets}
            onChange={(e) => handleGuestChange('pets', e.target.value)}
            min="0"
          />
        </div>
        <button onClick={saveGuestInfo}>L∆∞u th√¥ng tin</button>
      </Modal>
    </div>
  );
};

export default BookingSection;
